// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SCHByb3RvY29sGg9jb3JlL1Ryb24ucHJvdG8aE2NvcmUv",
            "Q29udHJhY3QucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8i",
            "lAMKBlJldHVybhIOCgZyZXN1bHQYASABKAgSLAoEY29kZRgCIAEoDjIeLnBy",
            "b3RvY29sLlJldHVybi5yZXNwb25zZV9jb2RlEg8KB21lc3NhZ2UYAyABKAwi",
            "ugIKDXJlc3BvbnNlX2NvZGUSCwoHU1VDQ0VTUxAAEgwKCFNJR0VSUk9SEAES",
            "GwoXQ09OVFJBQ1RfVkFMSURBVEVfRVJST1IQAhIWChJDT05UUkFDVF9FWEVf",
            "RVJST1IQAxISCg5CQU5EV0lUSF9FUlJPUhAEEhkKFURVUF9UUkFOU0FDVElP",
            "Tl9FUlJPUhAFEg8KC1RBUE9TX0VSUk9SEAYSHQoZVE9PX0JJR19UUkFOU0FD",
            "VElPTl9FUlJPUhAHEiAKHFRSQU5TQUNUSU9OX0VYUElSQVRJT05fRVJST1IQ",
            "CBIPCgtTRVJWRVJfQlVTWRAJEhEKDU5PX0NPTk5FQ1RJT04QChIjCh9OT1Rf",
            "RU5PVUdIX0VGRkVDVElWRV9DT05ORUNUSU9OEAsSDwoLT1RIRVJfRVJST1IQ",
            "FCI3Cg5CbG9ja1JlZmVyZW5jZRIRCglibG9ja19udW0YASABKAMSEgoKYmxv",
            "Y2tfaGFzaBgCIAEoDCIzCgtXaXRuZXNzTGlzdBIkCgl3aXRuZXNzZXMYASAD",
            "KAsyES5wcm90b2NvbC5XaXRuZXNzIjUKDFByb3Bvc2FsTGlzdBIlCglwcm9w",
            "b3NhbHMYASADKAsyEi5wcm90b2NvbC5Qcm9wb3NhbCI1CgxFeGNoYW5nZUxp",
            "c3QSJQoJZXhjaGFuZ2VzGAEgAygLMhIucHJvdG9jb2wuRXhjaGFuZ2UiQgoO",
            "QXNzZXRJc3N1ZUxpc3QSMAoKYXNzZXRJc3N1ZRgBIAMoCzIcLnByb3RvY29s",
            "LkFzc2V0SXNzdWVDb250cmFjdCIrCglCbG9ja0xpc3QSHgoFYmxvY2sYASAD",
            "KAsyDy5wcm90b2NvbC5CbG9jayI9Cg9UcmFuc2FjdGlvbkxpc3QSKgoLdHJh",
            "bnNhY3Rpb24YASADKAsyFS5wcm90b2NvbC5UcmFuc2FjdGlvbiJCChhEZWxl",
            "Z2F0ZWRSZXNvdXJjZU1lc3NhZ2USEwoLZnJvbUFkZHJlc3MYASABKAwSEQoJ",
            "dG9BZGRyZXNzGAIgASgMIk8KFURlbGVnYXRlZFJlc291cmNlTGlzdBI2ChFk",
            "ZWxlZ2F0ZWRSZXNvdXJjZRgBIAMoCzIbLnByb3RvY29sLkRlbGVnYXRlZFJl",
            "c291cmNlIikKCE5vZGVMaXN0Eh0KBW5vZGVzGAEgAygLMg4ucHJvdG9jb2wu",
            "Tm9kZSIqCgROb2RlEiIKB2FkZHJlc3MYASABKAsyES5wcm90b2NvbC5BZGRy",
            "ZXNzIiUKB0FkZHJlc3MSDAoEaG9zdBgBIAEoDBIMCgRwb3J0GAIgASgFIg4K",
            "DEVtcHR5TWVzc2FnZSIcCg1OdW1iZXJNZXNzYWdlEgsKA251bRgBIAEoAyId",
            "CgxCeXRlc01lc3NhZ2USDQoFdmFsdWUYASABKAwiRQoLVGltZU1lc3NhZ2US",
            "GwoTYmVnaW5Jbk1pbGxpc2Vjb25kcxgBIAEoAxIZChFlbmRJbk1pbGxpc2Vj",
            "b25kcxgCIAEoAyIuCgpCbG9ja0xpbWl0EhAKCHN0YXJ0TnVtGAEgASgDEg4K",
            "BmVuZE51bRgCIAEoAyI7ChBUcmFuc2FjdGlvbkxpbWl0EhUKDXRyYW5zYWN0",
            "aW9uSWQYASABKAwSEAoIbGltaXROdW0YAiABKAMiVQoQQWNjb3VudFBhZ2lu",
            "YXRlZBIiCgdhY2NvdW50GAEgASgLMhEucHJvdG9jb2wuQWNjb3VudBIOCgZv",
            "ZmZzZXQYAiABKAMSDQoFbGltaXQYAyABKAMiYQoUVGltZVBhZ2luYXRlZE1l",
            "c3NhZ2USKgoLdGltZU1lc3NhZ2UYASABKAsyFS5wcm90b2NvbC5UaW1lTWVz",
            "c2FnZRIOCgZvZmZzZXQYAiABKAMSDQoFbGltaXQYAyABKAMihwMKEUFjY291",
            "bnROZXRNZXNzYWdlEhMKC2ZyZWVOZXRVc2VkGAEgASgDEhQKDGZyZWVOZXRM",
            "aW1pdBgCIAEoAxIPCgdOZXRVc2VkGAMgASgDEhAKCE5ldExpbWl0GAQgASgD",
            "EkMKDGFzc2V0TmV0VXNlZBgFIAMoCzItLnByb3RvY29sLkFjY291bnROZXRN",
            "ZXNzYWdlLkFzc2V0TmV0VXNlZEVudHJ5EkUKDWFzc2V0TmV0TGltaXQYBiAD",
            "KAsyLi5wcm90b2NvbC5BY2NvdW50TmV0TWVzc2FnZS5Bc3NldE5ldExpbWl0",
            "RW50cnkSFQoNVG90YWxOZXRMaW1pdBgHIAEoAxIWCg5Ub3RhbE5ldFdlaWdo",
            "dBgIIAEoAxozChFBc3NldE5ldFVzZWRFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAM6AjgBGjQKEkFzc2V0TmV0TGltaXRFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAM6AjgBIp8EChZBY2NvdW50UmVzb3VyY2VN",
            "ZXNzYWdlEhMKC2ZyZWVOZXRVc2VkGAEgASgDEhQKDGZyZWVOZXRMaW1pdBgC",
            "IAEoAxIPCgdOZXRVc2VkGAMgASgDEhAKCE5ldExpbWl0GAQgASgDEkgKDGFz",
            "c2V0TmV0VXNlZBgFIAMoCzIyLnByb3RvY29sLkFjY291bnRSZXNvdXJjZU1l",
            "c3NhZ2UuQXNzZXROZXRVc2VkRW50cnkSSgoNYXNzZXROZXRMaW1pdBgGIAMo",
            "CzIzLnByb3RvY29sLkFjY291bnRSZXNvdXJjZU1lc3NhZ2UuQXNzZXROZXRM",
            "aW1pdEVudHJ5EhUKDVRvdGFsTmV0TGltaXQYByABKAMSFgoOVG90YWxOZXRX",
            "ZWlnaHQYCCABKAMSEgoKRW5lcmd5VXNlZBgNIAEoAxITCgtFbmVyZ3lMaW1p",
            "dBgOIAEoAxIYChBUb3RhbEVuZXJneUxpbWl0GA8gASgDEhkKEVRvdGFsRW5l",
            "cmd5V2VpZ2h0GBAgASgDEhMKC3N0b3JhZ2VVc2VkGBUgASgDEhQKDHN0b3Jh",
            "Z2VMaW1pdBgWIAEoAxozChFBc3NldE5ldFVzZWRFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAM6AjgBGjQKEkFzc2V0TmV0TGltaXRFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAM6AjgBIjEKEFBhZ2luYXRlZE1l",
            "c3NhZ2USDgoGb2Zmc2V0GAEgASgDEg0KBWxpbWl0GAIgASgDIkwKE0Vhc3lU",
            "cmFuc2Zlck1lc3NhZ2USEgoKcGFzc1BocmFzZRgBIAEoDBIRCgl0b0FkZHJl",
            "c3MYAiABKAwSDgoGYW1vdW50GAMgASgDImIKGEVhc3lUcmFuc2ZlckFzc2V0",
            "TWVzc2FnZRISCgpwYXNzUGhyYXNlGAEgASgMEhEKCXRvQWRkcmVzcxgCIAEo",
            "DBIPCgdhc3NldElkGAMgASgJEg4KBmFtb3VudBgEIAEoAyJVChxFYXN5VHJh",
            "bnNmZXJCeVByaXZhdGVNZXNzYWdlEhIKCnByaXZhdGVLZXkYASABKAwSEQoJ",
            "dG9BZGRyZXNzGAIgASgMEg4KBmFtb3VudBgDIAEoAyJrCiFFYXN5VHJhbnNm",
            "ZXJBc3NldEJ5UHJpdmF0ZU1lc3NhZ2USEgoKcHJpdmF0ZUtleRgBIAEoDBIR",
            "Cgl0b0FkZHJlc3MYAiABKAwSDwoHYXNzZXRJZBgDIAEoCRIOCgZhbW91bnQY",
            "BCABKAMicgoURWFzeVRyYW5zZmVyUmVzcG9uc2USKgoLdHJhbnNhY3Rpb24Y",
            "ASABKAsyFS5wcm90b2NvbC5UcmFuc2FjdGlvbhIgCgZyZXN1bHQYAiABKAsy",
            "EC5wcm90b2NvbC5SZXR1cm4SDAoEdHhpZBgDIAEoDCI+ChdBZGRyZXNzUHJL",
            "ZXlQYWlyTWVzc2FnZRIPCgdhZGRyZXNzGAEgASgJEhIKCnByaXZhdGVLZXkY",
            "AiABKAkiiwEKFFRyYW5zYWN0aW9uRXh0ZW50aW9uEioKC3RyYW5zYWN0aW9u",
            "GAEgASgLMhUucHJvdG9jb2wuVHJhbnNhY3Rpb24SDAoEdHhpZBgCIAEoDBIX",
            "Cg9jb25zdGFudF9yZXN1bHQYAyADKAwSIAoGcmVzdWx0GAQgASgLMhAucHJv",
            "dG9jb2wuUmV0dXJuIoQBCg5CbG9ja0V4dGVudGlvbhI0Cgx0cmFuc2FjdGlv",
            "bnMYASADKAsyHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbhIrCgxi",
            "bG9ja19oZWFkZXIYAiABKAsyFS5wcm90b2NvbC5CbG9ja0hlYWRlchIPCgdi",
            "bG9ja2lkGAMgASgMIj0KEkJsb2NrTGlzdEV4dGVudGlvbhInCgVibG9jaxgB",
            "IAMoCzIYLnByb3RvY29sLkJsb2NrRXh0ZW50aW9uIk8KGFRyYW5zYWN0aW9u",
            "TGlzdEV4dGVudGlvbhIzCgt0cmFuc2FjdGlvbhgBIAMoCzIeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIt8DChVUcmFuc2FjdGlvblNpZ25XZWln",
            "aHQSKAoKcGVybWlzc2lvbhgBIAEoCzIULnByb3RvY29sLlBlcm1pc3Npb24S",
            "FQoNYXBwcm92ZWRfbGlzdBgCIAMoDBIWCg5jdXJyZW50X3dlaWdodBgDIAEo",
            "AxI2CgZyZXN1bHQYBCABKAsyJi5wcm90b2NvbC5UcmFuc2FjdGlvblNpZ25X",
            "ZWlnaHQuUmVzdWx0EjMKC3RyYW5zYWN0aW9uGAUgASgLMh4ucHJvdG9jb2wu",
            "VHJhbnNhY3Rpb25FeHRlbnRpb24a/wEKBlJlc3VsdBJCCgRjb2RlGAEgASgO",
            "MjQucHJvdG9jb2wuVHJhbnNhY3Rpb25TaWduV2VpZ2h0LlJlc3VsdC5yZXNw",
            "b25zZV9jb2RlEg8KB21lc3NhZ2UYAiABKAkinwEKDXJlc3BvbnNlX2NvZGUS",
            "FQoRRU5PVUdIX1BFUk1JU1NJT04QABIZChVOT1RfRU5PVUdIX1BFUk1JU1NJ",
            "T04QARIaChZTSUdOQVRVUkVfRk9STUFUX0VSUk9SEAISGQoVQ09NUFVURV9B",
            "RERSRVNTX0VSUk9SEAMSFAoQUEVSTUlTU0lPTl9FUlJPUhAEEg8KC09USEVS",
            "X0VSUk9SEBQi5wIKF1RyYW5zYWN0aW9uQXBwcm92ZWRMaXN0EhUKDWFwcHJv",
            "dmVkX2xpc3QYAiADKAwSOAoGcmVzdWx0GAQgASgLMigucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb25BcHByb3ZlZExpc3QuUmVzdWx0EjMKC3RyYW5zYWN0aW9uGAUg",
            "ASgLMh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24axQEKBlJlc3Vs",
            "dBJECgRjb2RlGAEgASgOMjYucHJvdG9jb2wuVHJhbnNhY3Rpb25BcHByb3Zl",
            "ZExpc3QuUmVzdWx0LnJlc3BvbnNlX2NvZGUSDwoHbWVzc2FnZRgCIAEoCSJk",
            "Cg1yZXNwb25zZV9jb2RlEgsKB1NVQ0NFU1MQABIaChZTSUdOQVRVUkVfRk9S",
            "TUFUX0VSUk9SEAESGQoVQ09NUFVURV9BRERSRVNTX0VSUk9SEAISDwoLT1RI",
            "RVJfRVJST1IQFDKdUgoGV2FsbGV0EmcKCkdldEFjY291bnQSES5wcm90b2Nv",
            "bC5BY2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCIzgtPkkwItIhIvd2FsbGV0",
            "L2dldGFjY291bnQ6ASpaFBISL3dhbGxldC9nZXRhY2NvdW50EnMKDkdldEFj",
            "Y291bnRCeUlkEhEucHJvdG9jb2wuQWNjb3VudBoRLnByb3RvY29sLkFjY291",
            "bnQiO4LT5JMCNSIWL3dhbGxldC9nZXRhY2NvdW50YnlpZDoBKloYEhYvd2Fs",
            "bGV0L2dldGFjY291bnRieWlkEokBChFDcmVhdGVUcmFuc2FjdGlvbhIaLnBy",
            "b3RvY29sLlRyYW5zZmVyQ29udHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "biJBgtPkkwI7Ihkvd2FsbGV0L2NyZWF0ZXRyYW5zYWN0aW9uOgEqWhsSGS93",
            "YWxsZXQvY3JlYXRldHJhbnNhY3Rpb24SUgoSQ3JlYXRlVHJhbnNhY3Rpb24y",
            "EhoucHJvdG9jb2wuVHJhbnNmZXJDb250cmFjdBoeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uIgASiAEKFEJyb2FkY2FzdFRyYW5zYWN0aW9uEhUu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb24aEC5wcm90b2NvbC5SZXR1cm4iR4LT5JMC",
            "QSIcL3dhbGxldC9icm9hZGNhc3R0cmFuc2FjdGlvbjoBKloeEhwvd2FsbGV0",
            "L2Jyb2FkY2FzdHRyYW5zYWN0aW9uEoIBCg1VcGRhdGVBY2NvdW50Eh8ucHJv",
            "dG9jb2wuQWNjb3VudFVwZGF0ZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb24iOYLT5JMCMyIVL3dhbGxldC91cGRhdGVhY2NvdW50OgEqWhcSFS93",
            "YWxsZXQvdXBkYXRlYWNjb3VudBJ+CgxTZXRBY2NvdW50SWQSHi5wcm90b2Nv",
            "bC5TZXRBY2NvdW50SWRDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "IjeC0+STAjEiFC93YWxsZXQvc2V0YWNjb3VudGlkOgEqWhYSFC93YWxsZXQv",
            "c2V0YWNjb3VudGlkElMKDlVwZGF0ZUFjY291bnQyEh8ucHJvdG9jb2wuQWNj",
            "b3VudFVwZGF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRl",
            "bnRpb24iABKPAQoSVm90ZVdpdG5lc3NBY2NvdW50Eh0ucHJvdG9jb2wuVm90",
            "ZVdpdG5lc3NDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIkOC0+ST",
            "Aj0iGi93YWxsZXQvdm90ZXdpdG5lc3NhY2NvdW50OgEqWhwSGi93YWxsZXQv",
            "dm90ZXdpdG5lc3NhY2NvdW50ElIKDVVwZGF0ZVNldHRpbmcSHy5wcm90b2Nv",
            "bC5VcGRhdGVTZXR0aW5nQ29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlv",
            "bkV4dGVudGlvbiIAEloKEVVwZGF0ZUVuZXJneUxpbWl0EiMucHJvdG9jb2wu",
            "VXBkYXRlRW5lcmd5TGltaXRDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uRXh0ZW50aW9uIgASVgoVm90ZVdpdG5lc3NBY2NvdW50MhIdLnByb3Rv",
            "Y29sLlZvdGVXaXRuZXNzQ29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlv",
            "bkV4dGVudGlvbiIAEogBChBDcmVhdGVBc3NldElzc3VlEhwucHJvdG9jb2wu",
            "QXNzZXRJc3N1ZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iP4LT",
            "5JMCOSIYL3dhbGxldC9jcmVhdGVhc3NldGlzc3VlOgEqWhoSGC93YWxsZXQv",
            "Y3JlYXRlYXNzZXRpc3N1ZRJTChFDcmVhdGVBc3NldElzc3VlMhIcLnByb3Rv",
            "Y29sLkFzc2V0SXNzdWVDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "RXh0ZW50aW9uIgASggEKDVVwZGF0ZVdpdG5lc3MSHy5wcm90b2NvbC5XaXRu",
            "ZXNzVXBkYXRlQ29udHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPk",
            "kwIzIhUvd2FsbGV0L3VwZGF0ZXdpdG5lc3M6ASpaFxIVL3dhbGxldC91cGRh",
            "dGV3aXRuZXNzElMKDlVwZGF0ZVdpdG5lc3MyEh8ucHJvdG9jb2wuV2l0bmVz",
            "c1VwZGF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRp",
            "b24iABKCAQoNQ3JlYXRlQWNjb3VudBIfLnByb3RvY29sLkFjY291bnRDcmVh",
            "dGVDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIjmC0+STAjMiFS93",
            "YWxsZXQvY3JlYXRlYWNjb3VudDoBKloXEhUvd2FsbGV0L2NyZWF0ZWFjY291",
            "bnQSUwoOQ3JlYXRlQWNjb3VudDISHy5wcm90b2NvbC5BY2NvdW50Q3JlYXRl",
            "Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIB",
            "Cg1DcmVhdGVXaXRuZXNzEh8ucHJvdG9jb2wuV2l0bmVzc0NyZWF0ZUNvbnRy",
            "YWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC9j",
            "cmVhdGV3aXRuZXNzOgEqWhcSFS93YWxsZXQvY3JlYXRld2l0bmVzcxJTCg5D",
            "cmVhdGVXaXRuZXNzMhIfLnByb3RvY29sLldpdG5lc3NDcmVhdGVDb250cmFj",
            "dBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASggEKDVRyYW5z",
            "ZmVyQXNzZXQSHy5wcm90b2NvbC5UcmFuc2ZlckFzc2V0Q29udHJhY3QaFS5w",
            "cm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0L3RyYW5zZmVy",
            "YXNzZXQ6ASpaFxIVL3dhbGxldC90cmFuc2ZlcmFzc2V0ElMKDlRyYW5zZmVy",
            "QXNzZXQyEh8ucHJvdG9jb2wuVHJhbnNmZXJBc3NldENvbnRyYWN0Gh4ucHJv",
            "dG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKiAQoVUGFydGljaXBhdGVB",
            "c3NldElzc3VlEicucHJvdG9jb2wuUGFydGljaXBhdGVBc3NldElzc3VlQ29u",
            "dHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiJJgtPkkwJDIh0vd2FsbGV0",
            "L3BhcnRpY2lwYXRlYXNzZXRpc3N1ZToBKlofEh0vd2FsbGV0L3BhcnRpY2lw",
            "YXRlYXNzZXRpc3N1ZRJjChZQYXJ0aWNpcGF0ZUFzc2V0SXNzdWUyEicucHJv",
            "dG9jb2wuUGFydGljaXBhdGVBc3NldElzc3VlQ29udHJhY3QaHi5wcm90b2Nv",
            "bC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIBCg1GcmVlemVCYWxhbmNlEh8u",
            "cHJvdG9jb2wuRnJlZXplQmFsYW5jZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC9mcmVlemViYWxhbmNlOgEqWhcS",
            "FS93YWxsZXQvZnJlZXplYmFsYW5jZRJTCg5GcmVlemVCYWxhbmNlMhIfLnBy",
            "b3RvY29sLkZyZWV6ZUJhbGFuY2VDb250cmFjdBoeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uIgASigEKD1VuZnJlZXplQmFsYW5jZRIhLnByb3Rv",
            "Y29sLlVuZnJlZXplQmFsYW5jZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb24iPYLT5JMCNyIXL3dhbGxldC91bmZyZWV6ZWJhbGFuY2U6ASpaGRIX",
            "L3dhbGxldC91bmZyZWV6ZWJhbGFuY2USVwoQVW5mcmVlemVCYWxhbmNlMhIh",
            "LnByb3RvY29sLlVuZnJlZXplQmFsYW5jZUNvbnRyYWN0Gh4ucHJvdG9jb2wu",
            "VHJhbnNhY3Rpb25FeHRlbnRpb24iABKCAQoNVW5mcmVlemVBc3NldBIfLnBy",
            "b3RvY29sLlVuZnJlZXplQXNzZXRDb250cmFjdBoVLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uIjmC0+STAjMiFS93YWxsZXQvdW5mcmVlemVhc3NldDoBKloXEhUv",
            "d2FsbGV0L3VuZnJlZXplYXNzZXQSUwoOVW5mcmVlemVBc3NldDISHy5wcm90",
            "b2NvbC5VbmZyZWV6ZUFzc2V0Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2Fj",
            "dGlvbkV4dGVudGlvbiIAEooBCg9XaXRoZHJhd0JhbGFuY2USIS5wcm90b2Nv",
            "bC5XaXRoZHJhd0JhbGFuY2VDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uIj2C0+STAjciFy93YWxsZXQvd2l0aGRyYXdiYWxhbmNlOgEqWhkSFy93",
            "YWxsZXQvd2l0aGRyYXdiYWxhbmNlElcKEFdpdGhkcmF3QmFsYW5jZTISIS5w",
            "cm90b2NvbC5XaXRoZHJhd0JhbGFuY2VDb250cmFjdBoeLnByb3RvY29sLlRy",
            "YW5zYWN0aW9uRXh0ZW50aW9uIgASegoLVXBkYXRlQXNzZXQSHS5wcm90b2Nv",
            "bC5VcGRhdGVBc3NldENvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24i",
            "NYLT5JMCLyITL3dhbGxldC91cGRhdGVhc3NldDoBKloVEhMvd2FsbGV0L3Vw",
            "ZGF0ZWFzc2V0Ek8KDFVwZGF0ZUFzc2V0MhIdLnByb3RvY29sLlVwZGF0ZUFz",
            "c2V0Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIA",
            "ElQKDlByb3Bvc2FsQ3JlYXRlEiAucHJvdG9jb2wuUHJvcG9zYWxDcmVhdGVD",
            "b250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASVgoP",
            "UHJvcG9zYWxBcHByb3ZlEiEucHJvdG9jb2wuUHJvcG9zYWxBcHByb3ZlQ29u",
            "dHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAElQKDlBy",
            "b3Bvc2FsRGVsZXRlEiAucHJvdG9jb2wuUHJvcG9zYWxEZWxldGVDb250cmFj",
            "dBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASTAoKQnV5U3Rv",
            "cmFnZRIcLnByb3RvY29sLkJ1eVN0b3JhZ2VDb250cmFjdBoeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASVgoPQnV5U3RvcmFnZUJ5dGVzEiEu",
            "cHJvdG9jb2wuQnV5U3RvcmFnZUJ5dGVzQ29udHJhY3QaHi5wcm90b2NvbC5U",
            "cmFuc2FjdGlvbkV4dGVudGlvbiIAEk4KC1NlbGxTdG9yYWdlEh0ucHJvdG9j",
            "b2wuU2VsbFN0b3JhZ2VDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "RXh0ZW50aW9uIgASVAoORXhjaGFuZ2VDcmVhdGUSIC5wcm90b2NvbC5FeGNo",
            "YW5nZUNyZWF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRl",
            "bnRpb24iABJUCg5FeGNoYW5nZUluamVjdBIgLnByb3RvY29sLkV4Y2hhbmdl",
            "SW5qZWN0Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlv",
            "biIAElgKEEV4Y2hhbmdlV2l0aGRyYXcSIi5wcm90b2NvbC5FeGNoYW5nZVdp",
            "dGhkcmF3Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlv",
            "biIAEl4KE0V4Y2hhbmdlVHJhbnNhY3Rpb24SJS5wcm90b2NvbC5FeGNoYW5n",
            "ZVRyYW5zYWN0aW9uQ29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4",
            "dGVudGlvbiIAEmoKCUxpc3ROb2RlcxIWLnByb3RvY29sLkVtcHR5TWVzc2Fn",
            "ZRoSLnByb3RvY29sLk5vZGVMaXN0IjGC0+STAisiES93YWxsZXQvbGlzdG5v",
            "ZGVzOgEqWhMSES93YWxsZXQvbGlzdG5vZGVzEpIBChZHZXRBc3NldElzc3Vl",
            "QnlBY2NvdW50EhEucHJvdG9jb2wuQWNjb3VudBoYLnByb3RvY29sLkFzc2V0",
            "SXNzdWVMaXN0IkuC0+STAkUiHi93YWxsZXQvZ2V0YXNzZXRpc3N1ZWJ5YWNj",
            "b3VudDoBKlogEh4vd2FsbGV0L2dldGFzc2V0aXNzdWVieWFjY291bnQSegoN",
            "R2V0QWNjb3VudE5ldBIRLnByb3RvY29sLkFjY291bnQaGy5wcm90b2NvbC5B",
            "Y2NvdW50TmV0TWVzc2FnZSI5gtPkkwIzIhUvd2FsbGV0L2dldGFjY291bnRu",
            "ZXQ6ASpaFxIVL3dhbGxldC9nZXRhY2NvdW50bmV0EksKEkdldEFjY291bnRS",
            "ZXNvdXJjZRIRLnByb3RvY29sLkFjY291bnQaIC5wcm90b2NvbC5BY2NvdW50",
            "UmVzb3VyY2VNZXNzYWdlIgASkgEKE0dldEFzc2V0SXNzdWVCeU5hbWUSFi5w",
            "cm90b2NvbC5CeXRlc01lc3NhZ2UaHC5wcm90b2NvbC5Bc3NldElzc3VlQ29u",
            "dHJhY3QiRYLT5JMCPyIbL3dhbGxldC9nZXRhc3NldGlzc3VlYnluYW1lOgEq",
            "Wh0SGy93YWxsZXQvZ2V0YXNzZXRpc3N1ZWJ5bmFtZRJNChdHZXRBc3NldElz",
            "c3VlTGlzdEJ5TmFtZRIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoYLnByb3Rv",
            "Y29sLkFzc2V0SXNzdWVMaXN0IgASSwoRR2V0QXNzZXRJc3N1ZUJ5SWQSFi5w",
            "cm90b2NvbC5CeXRlc01lc3NhZ2UaHC5wcm90b2NvbC5Bc3NldElzc3VlQ29u",
            "dHJhY3QiABJtCgtHZXROb3dCbG9jaxIWLnByb3RvY29sLkVtcHR5TWVzc2Fn",
            "ZRoPLnByb3RvY29sLkJsb2NrIjWC0+STAi8iEy93YWxsZXQvZ2V0bm93Ymxv",
            "Y2s6ASpaFRITL3dhbGxldC9nZXRub3dibG9jaxJCCgxHZXROb3dCbG9jazIS",
            "Fi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaGC5wcm90b2NvbC5CbG9ja0V4dGVu",
            "dGlvbiIAEnQKDUdldEJsb2NrQnlOdW0SFy5wcm90b2NvbC5OdW1iZXJNZXNz",
            "YWdlGg8ucHJvdG9jb2wuQmxvY2siOYLT5JMCMyIVL3dhbGxldC9nZXRibG9j",
            "a2J5bnVtOgEqWhcSFS93YWxsZXQvZ2V0YmxvY2tieW51bRJFCg5HZXRCbG9j",
            "a0J5TnVtMhIXLnByb3RvY29sLk51bWJlck1lc3NhZ2UaGC5wcm90b2NvbC5C",
            "bG9ja0V4dGVudGlvbiIAElMKHUdldFRyYW5zYWN0aW9uQ291bnRCeUJsb2Nr",
            "TnVtEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoXLnByb3RvY29sLk51bWJl",
            "ck1lc3NhZ2UiABJwCgxHZXRCbG9ja0J5SWQSFi5wcm90b2NvbC5CeXRlc01l",
            "c3NhZ2UaDy5wcm90b2NvbC5CbG9jayI3gtPkkwIxIhQvd2FsbGV0L2dldGJs",
            "b2NrYnlpZDoBKloWEhQvd2FsbGV0L2dldGJsb2NrYnlpZBKHAQoTR2V0Qmxv",
            "Y2tCeUxpbWl0TmV4dBIULnByb3RvY29sLkJsb2NrTGltaXQaEy5wcm90b2Nv",
            "bC5CbG9ja0xpc3QiRYLT5JMCPyIbL3dhbGxldC9nZXRibG9ja2J5bGltaXRu",
            "ZXh0OgEqWh0SGy93YWxsZXQvZ2V0YmxvY2tieWxpbWl0bmV4dBJMChRHZXRC",
            "bG9ja0J5TGltaXROZXh0MhIULnByb3RvY29sLkJsb2NrTGltaXQaHC5wcm90",
            "b2NvbC5CbG9ja0xpc3RFeHRlbnRpb24iABKKAQoTR2V0QmxvY2tCeUxhdGVz",
            "dE51bRIXLnByb3RvY29sLk51bWJlck1lc3NhZ2UaEy5wcm90b2NvbC5CbG9j",
            "a0xpc3QiRYLT5JMCPyIbL3dhbGxldC9nZXRibG9ja2J5bGF0ZXN0bnVtOgEq",
            "Wh0SGy93YWxsZXQvZ2V0YmxvY2tieWxhdGVzdG51bRJPChRHZXRCbG9ja0J5",
            "TGF0ZXN0TnVtMhIXLnByb3RvY29sLk51bWJlck1lc3NhZ2UaHC5wcm90b2Nv",
            "bC5CbG9ja0xpc3RFeHRlbnRpb24iABKIAQoSR2V0VHJhbnNhY3Rpb25CeUlk",
            "EhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhUucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b24iQ4LT5JMCPSIaL3dhbGxldC9nZXR0cmFuc2FjdGlvbmJ5aWQ6ASpaHBIa",
            "L3dhbGxldC9nZXR0cmFuc2FjdGlvbmJ5aWQSUQoORGVwbG95Q29udHJhY3QS",
            "HS5wcm90b2NvbC5DcmVhdGVTbWFydENvbnRyYWN0Gh4ucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb25FeHRlbnRpb24iABJACgtHZXRDb250cmFjdBIWLnByb3RvY29s",
            "LkJ5dGVzTWVzc2FnZRoXLnByb3RvY29sLlNtYXJ0Q29udHJhY3QiABJTCg9U",
            "cmlnZ2VyQ29udHJhY3QSHi5wcm90b2NvbC5UcmlnZ2VyU21hcnRDb250cmFj",
            "dBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASWwoXVHJpZ2dl",
            "ckNvbnN0YW50Q29udHJhY3QSHi5wcm90b2NvbC5UcmlnZ2VyU21hcnRDb250",
            "cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASUAoQQ2xl",
            "YXJDb250cmFjdEFCSRIaLnByb3RvY29sLkNsZWFyQUJJQ29udHJhY3QaHi5w",
            "cm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEnkKDUxpc3RXaXRuZXNz",
            "ZXMSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFS5wcm90b2NvbC5XaXRuZXNz",
            "TGlzdCI5gtPkkwIzIhUvd2FsbGV0L2xpc3R3aXRuZXNzZXM6ASpaFxIVL3dh",
            "bGxldC9saXN0d2l0bmVzc2VzEl0KFEdldERlbGVnYXRlZFJlc291cmNlEiIu",
            "cHJvdG9jb2wuRGVsZWdhdGVkUmVzb3VyY2VNZXNzYWdlGh8ucHJvdG9jb2wu",
            "RGVsZWdhdGVkUmVzb3VyY2VMaXN0IgASZQogR2V0RGVsZWdhdGVkUmVzb3Vy",
            "Y2VBY2NvdW50SW5kZXgSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaJy5wcm90",
            "b2NvbC5EZWxlZ2F0ZWRSZXNvdXJjZUFjY291bnRJbmRleCIAEnoKDUxpc3RQ",
            "cm9wb3NhbHMSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFi5wcm90b2NvbC5Q",
            "cm9wb3NhbExpc3QiOYLT5JMCMyIVL3dhbGxldC9saXN0cHJvcG9zYWxzOgEq",
            "WhcSFS93YWxsZXQvbGlzdHByb3Bvc2FscxKfAQoYR2V0UGFnaW5hdGVkUHJv",
            "cG9zYWxMaXN0EhoucHJvdG9jb2wuUGFnaW5hdGVkTWVzc2FnZRoWLnByb3Rv",
            "Y29sLlByb3Bvc2FsTGlzdCJPgtPkkwJJIiAvd2FsbGV0L2dldHBhZ2luYXRl",
            "ZHByb3Bvc2FsbGlzdDoBKloiEiAvd2FsbGV0L2dldHBhZ2luYXRlZHByb3Bv",
            "c2FsbGlzdBJ8Cg9HZXRQcm9wb3NhbEJ5SWQSFi5wcm90b2NvbC5CeXRlc01l",
            "c3NhZ2UaEi5wcm90b2NvbC5Qcm9wb3NhbCI9gtPkkwI3Ihcvd2FsbGV0L2dl",
            "dHByb3Bvc2FsYnlpZDoBKloZEhcvd2FsbGV0L2dldHByb3Bvc2FsYnlpZBJ6",
            "Cg1MaXN0RXhjaGFuZ2VzEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhYucHJv",
            "dG9jb2wuRXhjaGFuZ2VMaXN0IjmC0+STAjMiFS93YWxsZXQvbGlzdGV4Y2hh",
            "bmdlczoBKloXEhUvd2FsbGV0L2xpc3RleGNoYW5nZXMSnwEKGEdldFBhZ2lu",
            "YXRlZEV4Y2hhbmdlTGlzdBIaLnByb3RvY29sLlBhZ2luYXRlZE1lc3NhZ2Ua",
            "Fi5wcm90b2NvbC5FeGNoYW5nZUxpc3QiT4LT5JMCSSIgL3dhbGxldC9nZXRw",
            "YWdpbmF0ZWRleGNoYW5nZWxpc3Q6ASpaIhIgL3dhbGxldC9nZXRwYWdpbmF0",
            "ZWRleGNoYW5nZWxpc3QSfAoPR2V0RXhjaGFuZ2VCeUlkEhYucHJvdG9jb2wu",
            "Qnl0ZXNNZXNzYWdlGhIucHJvdG9jb2wuRXhjaGFuZ2UiPYLT5JMCNyIXL3dh",
            "bGxldC9nZXRleGNoYW5nZWJ5aWQ6ASpaGRIXL3dhbGxldC9nZXRleGNoYW5n",
            "ZWJ5aWQSjAEKEkdldENoYWluUGFyYW1ldGVycxIWLnByb3RvY29sLkVtcHR5",
            "TWVzc2FnZRoZLnByb3RvY29sLkNoYWluUGFyYW1ldGVycyJDgtPkkwI9Ihov",
            "d2FsbGV0L2dldGNoYWlucGFyYW1ldGVyczoBKlocEhovd2FsbGV0L2dldGNo",
            "YWlucGFyYW1ldGVycxKIAQoRR2V0QXNzZXRJc3N1ZUxpc3QSFi5wcm90b2Nv",
            "bC5FbXB0eU1lc3NhZ2UaGC5wcm90b2NvbC5Bc3NldElzc3VlTGlzdCJBgtPk",
            "kwI7Ihkvd2FsbGV0L2dldGFzc2V0aXNzdWVsaXN0OgEqWhsSGS93YWxsZXQv",
            "Z2V0YXNzZXRpc3N1ZWxpc3QSpwEKGkdldFBhZ2luYXRlZEFzc2V0SXNzdWVM",
            "aXN0EhoucHJvdG9jb2wuUGFnaW5hdGVkTWVzc2FnZRoYLnByb3RvY29sLkFz",
            "c2V0SXNzdWVMaXN0IlOC0+STAk0iIi93YWxsZXQvZ2V0cGFnaW5hdGVkYXNz",
            "ZXRpc3N1ZWxpc3Q6ASpaJBIiL3dhbGxldC9nZXRwYWdpbmF0ZWRhc3NldGlz",
            "c3VlbGlzdBKEAQoQVG90YWxUcmFuc2FjdGlvbhIWLnByb3RvY29sLkVtcHR5",
            "TWVzc2FnZRoXLnByb3RvY29sLk51bWJlck1lc3NhZ2UiP4LT5JMCOSIYL3dh",
            "bGxldC90b3RhbHRyYW5zYWN0aW9uOgEqWhoSGC93YWxsZXQvdG90YWx0cmFu",
            "c2FjdGlvbhKWAQoWR2V0TmV4dE1haW50ZW5hbmNlVGltZRIWLnByb3RvY29s",
            "LkVtcHR5TWVzc2FnZRoXLnByb3RvY29sLk51bWJlck1lc3NhZ2UiS4LT5JMC",
            "RSIeL3dhbGxldC9nZXRuZXh0bWFpbnRlbmFuY2V0aW1lOgEqWiASHi93YWxs",
            "ZXQvZ2V0bmV4dG1haW50ZW5hbmNldGltZRKLAQoSR2V0VHJhbnNhY3Rpb25T",
            "aWduEhkucHJvdG9jb2wuVHJhbnNhY3Rpb25TaWduGhUucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb24iQ4LT5JMCPSIaL3dhbGxldC9nZXR0cmFuc2FjdGlvbnNpZ246",
            "ASpaHBIaL3dhbGxldC9nZXR0cmFuc2FjdGlvbnNpZ24SUgoTR2V0VHJhbnNh",
            "Y3Rpb25TaWduMhIZLnByb3RvY29sLlRyYW5zYWN0aW9uU2lnbhoeLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASegoNQ3JlYXRlQWRkcmVzcxIW",
            "LnByb3RvY29sLkJ5dGVzTWVzc2FnZRoWLnByb3RvY29sLkJ5dGVzTWVzc2Fn",
            "ZSI5gtPkkwIzIhUvd2FsbGV0L2NyZWF0ZWFkZHJlc3M6ASpaFxIVL3dhbGxl",
            "dC9jcmVhdGVhZGRyZXNzElkKEUVhc3lUcmFuc2ZlckFzc2V0EiIucHJvdG9j",
            "b2wuRWFzeVRyYW5zZmVyQXNzZXRNZXNzYWdlGh4ucHJvdG9jb2wuRWFzeVRy",
            "YW5zZmVyUmVzcG9uc2UiABJrChpFYXN5VHJhbnNmZXJBc3NldEJ5UHJpdmF0",
            "ZRIrLnByb3RvY29sLkVhc3lUcmFuc2ZlckFzc2V0QnlQcml2YXRlTWVzc2Fn",
            "ZRoeLnByb3RvY29sLkVhc3lUcmFuc2ZlclJlc3BvbnNlIgAShgEKDEVhc3lU",
            "cmFuc2ZlchIdLnByb3RvY29sLkVhc3lUcmFuc2Zlck1lc3NhZ2UaHi5wcm90",
            "b2NvbC5FYXN5VHJhbnNmZXJSZXNwb25zZSI3gtPkkwIxIhQvd2FsbGV0L2Vh",
            "c3l0cmFuc2ZlcjoBKloWEhQvd2FsbGV0L2Vhc3l0cmFuc2ZlchKqAQoVRWFz",
            "eVRyYW5zZmVyQnlQcml2YXRlEiYucHJvdG9jb2wuRWFzeVRyYW5zZmVyQnlQ",
            "cml2YXRlTWVzc2FnZRoeLnByb3RvY29sLkVhc3lUcmFuc2ZlclJlc3BvbnNl",
            "IkmC0+STAkMiHS93YWxsZXQvZWFzeXRyYW5zZmVyYnlwcml2YXRlOgEqWh8S",
            "HS93YWxsZXQvZWFzeXRyYW5zZmVyYnlwcml2YXRlEosBCg9HZW5lcmF0ZUFk",
            "ZHJlc3MSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaIS5wcm90b2NvbC5BZGRy",
            "ZXNzUHJLZXlQYWlyTWVzc2FnZSI9gtPkkwI3Ihcvd2FsbGV0L2dlbmVyYXRl",
            "YWRkcmVzczoBKloZEhcvd2FsbGV0L2dlbmVyYXRlYWRkcmVzcxKYAQoWR2V0",
            "VHJhbnNhY3Rpb25JbmZvQnlJZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoZ",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uSW5mbyJLgtPkkwJFIh4vd2FsbGV0L2dl",
            "dHRyYW5zYWN0aW9uaW5mb2J5aWQ6ASpaIBIeL3dhbGxldC9nZXR0cmFuc2Fj",
            "dGlvbmluZm9ieWlkErMBChdBY2NvdW50UGVybWlzc2lvblVwZGF0ZRIpLnBy",
            "b3RvY29sLkFjY291bnRQZXJtaXNzaW9uVXBkYXRlQ29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiJNgtPkkwJHIh8vd2FsbGV0L2Fj",
            "Y291bnRwZXJtaXNzaW9udXBkYXRlOgEqWiESHy93YWxsZXQvYWNjb3VudHBl",
            "cm1pc3Npb251cGRhdGUSRgoHQWRkU2lnbhIZLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uU2lnbhoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASVAoY",
            "R2V0VHJhbnNhY3Rpb25TaWduV2VpZ2h0EhUucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b24aHy5wcm90b2NvbC5UcmFuc2FjdGlvblNpZ25XZWlnaHQiABJYChpHZXRU",
            "cmFuc2FjdGlvbkFwcHJvdmVkTGlzdBIVLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "GiEucHJvdG9jb2wuVHJhbnNhY3Rpb25BcHByb3ZlZExpc3QiABI7CgtHZXRO",
            "b2RlSW5mbxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoSLnByb3RvY29sLk5v",
            "ZGVJbmZvIgAy7xEKDldhbGxldFNvbGlkaXR5EncKCkdldEFjY291bnQSES5w",
            "cm90b2NvbC5BY2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCJDgtPkkwI9Ihov",
            "d2FsbGV0c29saWRpdHkvZ2V0YWNjb3VudDoBKlocEhovd2FsbGV0c29saWRp",
            "dHkvZ2V0YWNjb3VudBKDAQoOR2V0QWNjb3VudEJ5SWQSES5wcm90b2NvbC5B",
            "Y2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCJLgtPkkwJFIh4vd2FsbGV0c29s",
            "aWRpdHkvZ2V0YWNjb3VudGJ5aWQ6ASpaIBIeL3dhbGxldHNvbGlkaXR5L2dl",
            "dGFjY291bnRieWlkEokBCg1MaXN0V2l0bmVzc2VzEhYucHJvdG9jb2wuRW1w",
            "dHlNZXNzYWdlGhUucHJvdG9jb2wuV2l0bmVzc0xpc3QiSYLT5JMCQyIdL3dh",
            "bGxldHNvbGlkaXR5L2xpc3R3aXRuZXNzZXM6ASpaHxIdL3dhbGxldHNvbGlk",
            "aXR5L2xpc3R3aXRuZXNzZXMSmAEKEUdldEFzc2V0SXNzdWVMaXN0EhYucHJv",
            "dG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3Qi",
            "UYLT5JMCSyIhL3dhbGxldHNvbGlkaXR5L2dldGFzc2V0aXNzdWVsaXN0OgEq",
            "WiMSIS93YWxsZXRzb2xpZGl0eS9nZXRhc3NldGlzc3VlbGlzdBK3AQoaR2V0",
            "UGFnaW5hdGVkQXNzZXRJc3N1ZUxpc3QSGi5wcm90b2NvbC5QYWdpbmF0ZWRN",
            "ZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiY4LT5JMCXSIqL3dh",
            "bGxldHNvbGlkaXR5L2dldHBhZ2luYXRlZGFzc2V0aXNzdWVsaXN0OgEqWiwS",
            "Ki93YWxsZXRzb2xpZGl0eS9nZXRwYWdpbmF0ZWRhc3NldGlzc3VlbGlzdBJN",
            "ChNHZXRBc3NldElzc3VlQnlOYW1lEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdl",
            "GhwucHJvdG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0IgASTQoXR2V0QXNzZXRJ",
            "c3N1ZUxpc3RCeU5hbWUSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaGC5wcm90",
            "b2NvbC5Bc3NldElzc3VlTGlzdCIAEksKEUdldEFzc2V0SXNzdWVCeUlkEhYu",
            "cHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhwucHJvdG9jb2wuQXNzZXRJc3N1ZUNv",
            "bnRyYWN0IgASfQoLR2V0Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3Nh",
            "Z2UaDy5wcm90b2NvbC5CbG9jayJFgtPkkwI/Ihsvd2FsbGV0c29saWRpdHkv",
            "Z2V0bm93YmxvY2s6ASpaHRIbL3dhbGxldHNvbGlkaXR5L2dldG5vd2Jsb2Nr",
            "EkIKDEdldE5vd0Jsb2NrMhIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoYLnBy",
            "b3RvY29sLkJsb2NrRXh0ZW50aW9uIgAShAEKDUdldEJsb2NrQnlOdW0SFy5w",
            "cm90b2NvbC5OdW1iZXJNZXNzYWdlGg8ucHJvdG9jb2wuQmxvY2siSYLT5JMC",
            "QyIdL3dhbGxldHNvbGlkaXR5L2dldGJsb2NrYnludW06ASpaHxIdL3dhbGxl",
            "dHNvbGlkaXR5L2dldGJsb2NrYnludW0SRQoOR2V0QmxvY2tCeU51bTISFy5w",
            "cm90b2NvbC5OdW1iZXJNZXNzYWdlGhgucHJvdG9jb2wuQmxvY2tFeHRlbnRp",
            "b24iABJTCh1HZXRUcmFuc2FjdGlvbkNvdW50QnlCbG9ja051bRIXLnByb3Rv",
            "Y29sLk51bWJlck1lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdlIgAS",
            "XQoUR2V0RGVsZWdhdGVkUmVzb3VyY2USIi5wcm90b2NvbC5EZWxlZ2F0ZWRS",
            "ZXNvdXJjZU1lc3NhZ2UaHy5wcm90b2NvbC5EZWxlZ2F0ZWRSZXNvdXJjZUxp",
            "c3QiABJlCiBHZXREZWxlZ2F0ZWRSZXNvdXJjZUFjY291bnRJbmRleBIWLnBy",
            "b3RvY29sLkJ5dGVzTWVzc2FnZRonLnByb3RvY29sLkRlbGVnYXRlZFJlc291",
            "cmNlQWNjb3VudEluZGV4IgASPwoPR2V0RXhjaGFuZ2VCeUlkEhYucHJvdG9j",
            "b2wuQnl0ZXNNZXNzYWdlGhIucHJvdG9jb2wuRXhjaGFuZ2UiABJBCg1MaXN0",
            "RXhjaGFuZ2VzEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhYucHJvdG9jb2wu",
            "RXhjaGFuZ2VMaXN0IgASmAEKEkdldFRyYW5zYWN0aW9uQnlJZBIWLnByb3Rv",
            "Y29sLkJ5dGVzTWVzc2FnZRoVLnByb3RvY29sLlRyYW5zYWN0aW9uIlOC0+ST",
            "Ak0iIi93YWxsZXRzb2xpZGl0eS9nZXR0cmFuc2FjdGlvbmJ5aWQ6ASpaJBIi",
            "L3dhbGxldHNvbGlkaXR5L2dldHRyYW5zYWN0aW9uYnlpZBKoAQoWR2V0VHJh",
            "bnNhY3Rpb25JbmZvQnlJZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoZLnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uSW5mbyJbgtPkkwJVIiYvd2FsbGV0c29saWRp",
            "dHkvZ2V0dHJhbnNhY3Rpb25pbmZvYnlpZDoBKlooEiYvd2FsbGV0c29saWRp",
            "dHkvZ2V0dHJhbnNhY3Rpb25pbmZvYnlpZBKbAQoPR2VuZXJhdGVBZGRyZXNz",
            "EhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGiEucHJvdG9jb2wuQWRkcmVzc1By",
            "S2V5UGFpck1lc3NhZ2UiTYLT5JMCRyIfL3dhbGxldHNvbGlkaXR5L2dlbmVy",
            "YXRlYWRkcmVzczoBKlohEh8vd2FsbGV0c29saWRpdHkvZ2VuZXJhdGVhZGRy",
            "ZXNzMq0ECg9XYWxsZXRFeHRlbnNpb24SsQEKF0dldFRyYW5zYWN0aW9uc0Zy",
            "b21UaGlzEhoucHJvdG9jb2wuQWNjb3VudFBhZ2luYXRlZBoZLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uTGlzdCJfgtPkkwJZIigvd2FsbGV0ZXh0ZW5zaW9uL2dl",
            "dHRyYW5zYWN0aW9uc2Zyb210aGlzOgEqWioSKC93YWxsZXRleHRlbnNpb24v",
            "Z2V0dHJhbnNhY3Rpb25zZnJvbXRoaXMSXAoYR2V0VHJhbnNhY3Rpb25zRnJv",
            "bVRoaXMyEhoucHJvdG9jb2wuQWNjb3VudFBhZ2luYXRlZBoiLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uTGlzdEV4dGVudGlvbiIAEqsBChVHZXRUcmFuc2FjdGlv",
            "bnNUb1RoaXMSGi5wcm90b2NvbC5BY2NvdW50UGFnaW5hdGVkGhkucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb25MaXN0IluC0+STAlUiJi93YWxsZXRleHRlbnNpb24v",
            "Z2V0dHJhbnNhY3Rpb25zdG90aGlzOgEqWigSJi93YWxsZXRleHRlbnNpb24v",
            "Z2V0dHJhbnNhY3Rpb25zdG90aGlzEloKFkdldFRyYW5zYWN0aW9uc1RvVGhp",
            "czISGi5wcm90b2NvbC5BY2NvdW50UGFnaW5hdGVkGiIucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb25MaXN0RXh0ZW50aW9uIgAymQIKCERhdGFiYXNlEkcKEWdldEJs",
            "b2NrUmVmZXJlbmNlEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9j",
            "b2wuQmxvY2tSZWZlcmVuY2UiABJNChRHZXREeW5hbWljUHJvcGVydGllcxIW",
            "LnByb3RvY29sLkVtcHR5TWVzc2FnZRobLnByb3RvY29sLkR5bmFtaWNQcm9w",
            "ZXJ0aWVzIgASOAoLR2V0Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3Nh",
            "Z2UaDy5wcm90b2NvbC5CbG9jayIAEjsKDUdldEJsb2NrQnlOdW0SFy5wcm90",
            "b2NvbC5OdW1iZXJNZXNzYWdlGg8ucHJvdG9jb2wuQmxvY2siADIJCgdOZXR3",
            "b3JrQkEKDG9yZy50cm9uLmFwaUIHR3JwY0FQSVooZ2l0aHViLmNvbS90cm9u",
            "cHJvdG9jb2wvZ3JwYy1nYXRld2F5L2FwaWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.TronReflection.Descriptor, global::Protocol.ContractReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Return), global::Protocol.Return.Parser, new[]{ "Result", "Code", "Message" }, null, new[]{ typeof(global::Protocol.Return.Types.response_code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockReference), global::Protocol.BlockReference.Parser, new[]{ "BlockNum", "BlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.WitnessList), global::Protocol.WitnessList.Parser, new[]{ "Witnesses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ProposalList), global::Protocol.ProposalList.Parser, new[]{ "Proposals" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ExchangeList), global::Protocol.ExchangeList.Parser, new[]{ "Exchanges" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AssetIssueList), global::Protocol.AssetIssueList.Parser, new[]{ "AssetIssue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockList), global::Protocol.BlockList.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionList), global::Protocol.TransactionList.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DelegatedResourceMessage), global::Protocol.DelegatedResourceMessage.Parser, new[]{ "FromAddress", "ToAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DelegatedResourceList), global::Protocol.DelegatedResourceList.Parser, new[]{ "DelegatedResource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.NodeList), global::Protocol.NodeList.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Node), global::Protocol.Node.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Address), global::Protocol.Address.Parser, new[]{ "Host", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EmptyMessage), global::Protocol.EmptyMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.NumberMessage), global::Protocol.NumberMessage.Parser, new[]{ "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BytesMessage), global::Protocol.BytesMessage.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TimeMessage), global::Protocol.TimeMessage.Parser, new[]{ "BeginInMilliseconds", "EndInMilliseconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockLimit), global::Protocol.BlockLimit.Parser, new[]{ "StartNum", "EndNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionLimit), global::Protocol.TransactionLimit.Parser, new[]{ "TransactionId", "LimitNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountPaginated), global::Protocol.AccountPaginated.Parser, new[]{ "Account", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TimePaginatedMessage), global::Protocol.TimePaginatedMessage.Parser, new[]{ "TimeMessage", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountNetMessage), global::Protocol.AccountNetMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountResourceMessage), global::Protocol.AccountResourceMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight", "EnergyUsed", "EnergyLimit", "TotalEnergyLimit", "TotalEnergyWeight", "StorageUsed", "StorageLimit" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PaginatedMessage), global::Protocol.PaginatedMessage.Parser, new[]{ "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferMessage), global::Protocol.EasyTransferMessage.Parser, new[]{ "PassPhrase", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferAssetMessage), global::Protocol.EasyTransferAssetMessage.Parser, new[]{ "PassPhrase", "ToAddress", "AssetId", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferByPrivateMessage), global::Protocol.EasyTransferByPrivateMessage.Parser, new[]{ "PrivateKey", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferAssetByPrivateMessage), global::Protocol.EasyTransferAssetByPrivateMessage.Parser, new[]{ "PrivateKey", "ToAddress", "AssetId", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferResponse), global::Protocol.EasyTransferResponse.Parser, new[]{ "Transaction", "Result", "Txid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AddressPrKeyPairMessage), global::Protocol.AddressPrKeyPairMessage.Parser, new[]{ "Address", "PrivateKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionExtention), global::Protocol.TransactionExtention.Parser, new[]{ "Transaction", "Txid", "ConstantResult", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockExtention), global::Protocol.BlockExtention.Parser, new[]{ "Transactions", "BlockHeader", "Blockid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockListExtention), global::Protocol.BlockListExtention.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionListExtention), global::Protocol.TransactionListExtention.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionSignWeight), global::Protocol.TransactionSignWeight.Parser, new[]{ "Permission", "ApprovedList", "CurrentWeight", "Result", "Transaction" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionSignWeight.Types.Result), global::Protocol.TransactionSignWeight.Types.Result.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Protocol.TransactionSignWeight.Types.Result.Types.response_code) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionApprovedList), global::Protocol.TransactionApprovedList.Parser, new[]{ "ApprovedList", "Result", "Transaction" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionApprovedList.Types.Result), global::Protocol.TransactionApprovedList.Types.Result.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Protocol.TransactionApprovedList.Types.Result.Types.response_code) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Return : pb::IMessage<Return> {
    private static readonly pb::MessageParser<Return> _parser = new pb::MessageParser<Return>(() => new Return());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Return> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return(Return other) : this() {
      result_ = other.result_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return Clone() {
      return new Return(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Protocol.Return.Types.response_code code_ = global::Protocol.Return.Types.response_code.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return.Types.response_code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Return);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Return other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Code != global::Protocol.Return.Types.response_code.Success) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Code != global::Protocol.Return.Types.response_code.Success) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Code != global::Protocol.Return.Types.response_code.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Return other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Code != global::Protocol.Return.Types.response_code.Success) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 16: {
            Code = (global::Protocol.Return.Types.response_code) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Return message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum response_code {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        /// error in signature
        /// </summary>
        [pbr::OriginalName("SIGERROR")] Sigerror = 1,
        [pbr::OriginalName("CONTRACT_VALIDATE_ERROR")] ContractValidateError = 2,
        [pbr::OriginalName("CONTRACT_EXE_ERROR")] ContractExeError = 3,
        [pbr::OriginalName("BANDWITH_ERROR")] BandwithError = 4,
        [pbr::OriginalName("DUP_TRANSACTION_ERROR")] DupTransactionError = 5,
        [pbr::OriginalName("TAPOS_ERROR")] TaposError = 6,
        [pbr::OriginalName("TOO_BIG_TRANSACTION_ERROR")] TooBigTransactionError = 7,
        [pbr::OriginalName("TRANSACTION_EXPIRATION_ERROR")] TransactionExpirationError = 8,
        [pbr::OriginalName("SERVER_BUSY")] ServerBusy = 9,
        [pbr::OriginalName("NO_CONNECTION")] NoConnection = 10,
        [pbr::OriginalName("NOT_ENOUGH_EFFECTIVE_CONNECTION")] NotEnoughEffectiveConnection = 11,
        [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
      }

    }
    #endregion

  }

  public sealed partial class BlockReference : pb::IMessage<BlockReference> {
    private static readonly pb::MessageParser<BlockReference> _parser = new pb::MessageParser<BlockReference>(() => new BlockReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference(BlockReference other) : this() {
      blockNum_ = other.blockNum_;
      blockHash_ = other.blockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference Clone() {
      return new BlockReference(this);
    }

    /// <summary>Field number for the "block_num" field.</summary>
    public const int BlockNumFieldNumber = 1;
    private long blockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNum {
      get { return blockNum_; }
      set {
        blockNum_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 2;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockNum != other.BlockNum) return false;
      if (BlockHash != other.BlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockNum != 0L) hash ^= BlockNum.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlockNum);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNum);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockReference other) {
      if (other == null) {
        return;
      }
      if (other.BlockNum != 0L) {
        BlockNum = other.BlockNum;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockNum = input.ReadInt64();
            break;
          }
          case 18: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessList : pb::IMessage<WitnessList> {
    private static readonly pb::MessageParser<WitnessList> _parser = new pb::MessageParser<WitnessList>(() => new WitnessList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList(WitnessList other) : this() {
      witnesses_ = other.witnesses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList Clone() {
      return new WitnessList(this);
    }

    /// <summary>Field number for the "witnesses" field.</summary>
    public const int WitnessesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Witness> _repeated_witnesses_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Witness.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Witness> witnesses_ = new pbc::RepeatedField<global::Protocol.Witness>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Witness> Witnesses {
      get { return witnesses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!witnesses_.Equals(other.witnesses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= witnesses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      witnesses_.WriteTo(output, _repeated_witnesses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += witnesses_.CalculateSize(_repeated_witnesses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessList other) {
      if (other == null) {
        return;
      }
      witnesses_.Add(other.witnesses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            witnesses_.AddEntriesFrom(input, _repeated_witnesses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalList : pb::IMessage<ProposalList> {
    private static readonly pb::MessageParser<ProposalList> _parser = new pb::MessageParser<ProposalList>(() => new ProposalList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList(ProposalList other) : this() {
      proposals_ = other.proposals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList Clone() {
      return new ProposalList(this);
    }

    /// <summary>Field number for the "proposals" field.</summary>
    public const int ProposalsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Proposal> _repeated_proposals_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Proposal.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Proposal> proposals_ = new pbc::RepeatedField<global::Protocol.Proposal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Proposal> Proposals {
      get { return proposals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!proposals_.Equals(other.proposals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= proposals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      proposals_.WriteTo(output, _repeated_proposals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += proposals_.CalculateSize(_repeated_proposals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalList other) {
      if (other == null) {
        return;
      }
      proposals_.Add(other.proposals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            proposals_.AddEntriesFrom(input, _repeated_proposals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeList : pb::IMessage<ExchangeList> {
    private static readonly pb::MessageParser<ExchangeList> _parser = new pb::MessageParser<ExchangeList>(() => new ExchangeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList(ExchangeList other) : this() {
      exchanges_ = other.exchanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList Clone() {
      return new ExchangeList(this);
    }

    /// <summary>Field number for the "exchanges" field.</summary>
    public const int ExchangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Exchange> _repeated_exchanges_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Exchange.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Exchange> exchanges_ = new pbc::RepeatedField<global::Protocol.Exchange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Exchange> Exchanges {
      get { return exchanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exchanges_.Equals(other.exchanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exchanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      exchanges_.WriteTo(output, _repeated_exchanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchanges_.CalculateSize(_repeated_exchanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeList other) {
      if (other == null) {
        return;
      }
      exchanges_.Add(other.exchanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchanges_.AddEntriesFrom(input, _repeated_exchanges_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetIssueList : pb::IMessage<AssetIssueList> {
    private static readonly pb::MessageParser<AssetIssueList> _parser = new pb::MessageParser<AssetIssueList>(() => new AssetIssueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetIssueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList(AssetIssueList other) : this() {
      assetIssue_ = other.assetIssue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList Clone() {
      return new AssetIssueList(this);
    }

    /// <summary>Field number for the "assetIssue" field.</summary>
    public const int AssetIssueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.AssetIssueContract> _repeated_assetIssue_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.AssetIssueContract.Parser);
    private readonly pbc::RepeatedField<global::Protocol.AssetIssueContract> assetIssue_ = new pbc::RepeatedField<global::Protocol.AssetIssueContract>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.AssetIssueContract> AssetIssue {
      get { return assetIssue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetIssueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetIssueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assetIssue_.Equals(other.assetIssue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assetIssue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assetIssue_.WriteTo(output, _repeated_assetIssue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assetIssue_.CalculateSize(_repeated_assetIssue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetIssueList other) {
      if (other == null) {
        return;
      }
      assetIssue_.Add(other.assetIssue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assetIssue_.AddEntriesFrom(input, _repeated_assetIssue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockList : pb::IMessage<BlockList> {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList(BlockList other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Block> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Block.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Block> block_ = new pbc::RepeatedField<global::Protocol.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Block> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionList : pb::IMessage<TransactionList> {
    private static readonly pb::MessageParser<TransactionList> _parser = new pb::MessageParser<TransactionList>(() => new TransactionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList(TransactionList other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList Clone() {
      return new TransactionList(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Transaction> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Transaction> transaction_ = new pbc::RepeatedField<global::Protocol.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Transaction> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionList other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceMessage : pb::IMessage<DelegatedResourceMessage> {
    private static readonly pb::MessageParser<DelegatedResourceMessage> _parser = new pb::MessageParser<DelegatedResourceMessage>(() => new DelegatedResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage(DelegatedResourceMessage other) : this() {
      fromAddress_ = other.fromAddress_;
      toAddress_ = other.toAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage Clone() {
      return new DelegatedResourceMessage(this);
    }

    /// <summary>Field number for the "fromAddress" field.</summary>
    public const int FromAddressFieldNumber = 1;
    private pb::ByteString fromAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FromAddress {
      get { return fromAddress_; }
      set {
        fromAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromAddress != other.FromAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromAddress.Length != 0) hash ^= FromAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(FromAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FromAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromAddress.Length != 0) {
        FromAddress = other.FromAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceList : pb::IMessage<DelegatedResourceList> {
    private static readonly pb::MessageParser<DelegatedResourceList> _parser = new pb::MessageParser<DelegatedResourceList>(() => new DelegatedResourceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList(DelegatedResourceList other) : this() {
      delegatedResource_ = other.delegatedResource_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList Clone() {
      return new DelegatedResourceList(this);
    }

    /// <summary>Field number for the "delegatedResource" field.</summary>
    public const int DelegatedResourceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.DelegatedResource> _repeated_delegatedResource_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.DelegatedResource.Parser);
    private readonly pbc::RepeatedField<global::Protocol.DelegatedResource> delegatedResource_ = new pbc::RepeatedField<global::Protocol.DelegatedResource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.DelegatedResource> DelegatedResource {
      get { return delegatedResource_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!delegatedResource_.Equals(other.delegatedResource_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= delegatedResource_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      delegatedResource_.WriteTo(output, _repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += delegatedResource_.CalculateSize(_repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceList other) {
      if (other == null) {
        return;
      }
      delegatedResource_.Add(other.delegatedResource_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            delegatedResource_.AddEntriesFrom(input, _repeated_delegatedResource_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node list
  /// </summary>
  public sealed partial class NodeList : pb::IMessage<NodeList> {
    private static readonly pb::MessageParser<NodeList> _parser = new pb::MessageParser<NodeList>(() => new NodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList(NodeList other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList Clone() {
      return new NodeList(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Node.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Node> nodes_ = new pbc::RepeatedField<global::Protocol.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Node> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeList other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node
  /// </summary>
  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Protocol.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Protocol.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::Protocol.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node address
  /// </summary>
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private pb::ByteString host_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadBytes();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyMessage : pb::IMessage<EmptyMessage> {
    private static readonly pb::MessageParser<EmptyMessage> _parser = new pb::MessageParser<EmptyMessage>(() => new EmptyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage(EmptyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage Clone() {
      return new EmptyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NumberMessage : pb::IMessage<NumberMessage> {
    private static readonly pb::MessageParser<NumberMessage> _parser = new pb::MessageParser<NumberMessage>(() => new NumberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage(NumberMessage other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage Clone() {
      return new NumberMessage(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumberMessage other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BytesMessage : pb::IMessage<BytesMessage> {
    private static readonly pb::MessageParser<BytesMessage> _parser = new pb::MessageParser<BytesMessage>(() => new BytesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BytesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage(BytesMessage other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage Clone() {
      return new BytesMessage(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BytesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BytesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BytesMessage other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeMessage : pb::IMessage<TimeMessage> {
    private static readonly pb::MessageParser<TimeMessage> _parser = new pb::MessageParser<TimeMessage>(() => new TimeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage(TimeMessage other) : this() {
      beginInMilliseconds_ = other.beginInMilliseconds_;
      endInMilliseconds_ = other.endInMilliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage Clone() {
      return new TimeMessage(this);
    }

    /// <summary>Field number for the "beginInMilliseconds" field.</summary>
    public const int BeginInMillisecondsFieldNumber = 1;
    private long beginInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BeginInMilliseconds {
      get { return beginInMilliseconds_; }
      set {
        beginInMilliseconds_ = value;
      }
    }

    /// <summary>Field number for the "endInMilliseconds" field.</summary>
    public const int EndInMillisecondsFieldNumber = 2;
    private long endInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndInMilliseconds {
      get { return endInMilliseconds_; }
      set {
        endInMilliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeginInMilliseconds != other.BeginInMilliseconds) return false;
      if (EndInMilliseconds != other.EndInMilliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BeginInMilliseconds != 0L) hash ^= BeginInMilliseconds.GetHashCode();
      if (EndInMilliseconds != 0L) hash ^= EndInMilliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BeginInMilliseconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BeginInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeMessage other) {
      if (other == null) {
        return;
      }
      if (other.BeginInMilliseconds != 0L) {
        BeginInMilliseconds = other.BeginInMilliseconds;
      }
      if (other.EndInMilliseconds != 0L) {
        EndInMilliseconds = other.EndInMilliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BeginInMilliseconds = input.ReadInt64();
            break;
          }
          case 16: {
            EndInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLimit : pb::IMessage<BlockLimit> {
    private static readonly pb::MessageParser<BlockLimit> _parser = new pb::MessageParser<BlockLimit>(() => new BlockLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit(BlockLimit other) : this() {
      startNum_ = other.startNum_;
      endNum_ = other.endNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit Clone() {
      return new BlockLimit(this);
    }

    /// <summary>Field number for the "startNum" field.</summary>
    public const int StartNumFieldNumber = 1;
    private long startNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartNum {
      get { return startNum_; }
      set {
        startNum_ = value;
      }
    }

    /// <summary>Field number for the "endNum" field.</summary>
    public const int EndNumFieldNumber = 2;
    private long endNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndNum {
      get { return endNum_; }
      set {
        endNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartNum != other.StartNum) return false;
      if (EndNum != other.EndNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartNum != 0L) hash ^= StartNum.GetHashCode();
      if (EndNum != 0L) hash ^= EndNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartNum);
      }
      if (EndNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartNum);
      }
      if (EndNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLimit other) {
      if (other == null) {
        return;
      }
      if (other.StartNum != 0L) {
        StartNum = other.StartNum;
      }
      if (other.EndNum != 0L) {
        EndNum = other.EndNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartNum = input.ReadInt64();
            break;
          }
          case 16: {
            EndNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionLimit : pb::IMessage<TransactionLimit> {
    private static readonly pb::MessageParser<TransactionLimit> _parser = new pb::MessageParser<TransactionLimit>(() => new TransactionLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit(TransactionLimit other) : this() {
      transactionId_ = other.transactionId_;
      limitNum_ = other.limitNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit Clone() {
      return new TransactionLimit(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private pb::ByteString transactionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limitNum" field.</summary>
    public const int LimitNumFieldNumber = 2;
    private long limitNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LimitNum {
      get { return limitNum_; }
      set {
        limitNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (LimitNum != other.LimitNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (LimitNum != 0L) hash ^= LimitNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionId);
      }
      if (LimitNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LimitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (LimitNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LimitNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionLimit other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.LimitNum != 0L) {
        LimitNum = other.LimitNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 16: {
            LimitNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPaginated : pb::IMessage<AccountPaginated> {
    private static readonly pb::MessageParser<AccountPaginated> _parser = new pb::MessageParser<AccountPaginated>(() => new AccountPaginated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPaginated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated(AccountPaginated other) : this() {
      account_ = other.account_ != null ? other.account_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated Clone() {
      return new AccountPaginated(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Protocol.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPaginated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPaginated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPaginated other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::Protocol.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              Account = new global::Protocol.Account();
            }
            input.ReadMessage(Account);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePaginatedMessage : pb::IMessage<TimePaginatedMessage> {
    private static readonly pb::MessageParser<TimePaginatedMessage> _parser = new pb::MessageParser<TimePaginatedMessage>(() => new TimePaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage(TimePaginatedMessage other) : this() {
      timeMessage_ = other.timeMessage_ != null ? other.timeMessage_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage Clone() {
      return new TimePaginatedMessage(this);
    }

    /// <summary>Field number for the "timeMessage" field.</summary>
    public const int TimeMessageFieldNumber = 1;
    private global::Protocol.TimeMessage timeMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TimeMessage TimeMessage {
      get { return timeMessage_; }
      set {
        timeMessage_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeMessage, other.TimeMessage)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeMessage_ != null) hash ^= TimeMessage.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeMessage);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeMessage);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.timeMessage_ != null) {
        if (timeMessage_ == null) {
          TimeMessage = new global::Protocol.TimeMessage();
        }
        TimeMessage.MergeFrom(other.TimeMessage);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeMessage_ == null) {
              TimeMessage = new global::Protocol.TimeMessage();
            }
            input.ReadMessage(TimeMessage);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///deprecated
  /// </summary>
  public sealed partial class AccountNetMessage : pb::IMessage<AccountNetMessage> {
    private static readonly pb::MessageParser<AccountNetMessage> _parser = new pb::MessageParser<AccountNetMessage>(() => new AccountNetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountNetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage(AccountNetMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage Clone() {
      return new AccountNetMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountNetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountNetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountNetMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountResourceMessage : pb::IMessage<AccountResourceMessage> {
    private static readonly pb::MessageParser<AccountResourceMessage> _parser = new pb::MessageParser<AccountResourceMessage>(() => new AccountResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage(AccountResourceMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      energyUsed_ = other.energyUsed_;
      energyLimit_ = other.energyLimit_;
      totalEnergyLimit_ = other.totalEnergyLimit_;
      totalEnergyWeight_ = other.totalEnergyWeight_;
      storageUsed_ = other.storageUsed_;
      storageLimit_ = other.storageLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage Clone() {
      return new AccountResourceMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    /// <summary>Field number for the "EnergyUsed" field.</summary>
    public const int EnergyUsedFieldNumber = 13;
    private long energyUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyUsed {
      get { return energyUsed_; }
      set {
        energyUsed_ = value;
      }
    }

    /// <summary>Field number for the "EnergyLimit" field.</summary>
    public const int EnergyLimitFieldNumber = 14;
    private long energyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyLimit {
      get { return energyLimit_; }
      set {
        energyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyLimit" field.</summary>
    public const int TotalEnergyLimitFieldNumber = 15;
    private long totalEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyLimit {
      get { return totalEnergyLimit_; }
      set {
        totalEnergyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyWeight" field.</summary>
    public const int TotalEnergyWeightFieldNumber = 16;
    private long totalEnergyWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyWeight {
      get { return totalEnergyWeight_; }
      set {
        totalEnergyWeight_ = value;
      }
    }

    /// <summary>Field number for the "storageUsed" field.</summary>
    public const int StorageUsedFieldNumber = 21;
    private long storageUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageUsed {
      get { return storageUsed_; }
      set {
        storageUsed_ = value;
      }
    }

    /// <summary>Field number for the "storageLimit" field.</summary>
    public const int StorageLimitFieldNumber = 22;
    private long storageLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageLimit {
      get { return storageLimit_; }
      set {
        storageLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      if (EnergyUsed != other.EnergyUsed) return false;
      if (EnergyLimit != other.EnergyLimit) return false;
      if (TotalEnergyLimit != other.TotalEnergyLimit) return false;
      if (TotalEnergyWeight != other.TotalEnergyWeight) return false;
      if (StorageUsed != other.StorageUsed) return false;
      if (StorageLimit != other.StorageLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (EnergyUsed != 0L) hash ^= EnergyUsed.GetHashCode();
      if (EnergyLimit != 0L) hash ^= EnergyLimit.GetHashCode();
      if (TotalEnergyLimit != 0L) hash ^= TotalEnergyLimit.GetHashCode();
      if (TotalEnergyWeight != 0L) hash ^= TotalEnergyWeight.GetHashCode();
      if (StorageUsed != 0L) hash ^= StorageUsed.GetHashCode();
      if (StorageLimit != 0L) hash ^= StorageLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (EnergyUsed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(StorageUsed);
      }
      if (StorageLimit != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(StorageLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (EnergyUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageUsed);
      }
      if (StorageLimit != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      if (other.EnergyUsed != 0L) {
        EnergyUsed = other.EnergyUsed;
      }
      if (other.EnergyLimit != 0L) {
        EnergyLimit = other.EnergyLimit;
      }
      if (other.TotalEnergyLimit != 0L) {
        TotalEnergyLimit = other.TotalEnergyLimit;
      }
      if (other.TotalEnergyWeight != 0L) {
        TotalEnergyWeight = other.TotalEnergyWeight;
      }
      if (other.StorageUsed != 0L) {
        StorageUsed = other.StorageUsed;
      }
      if (other.StorageLimit != 0L) {
        StorageLimit = other.StorageLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
          case 104: {
            EnergyUsed = input.ReadInt64();
            break;
          }
          case 112: {
            EnergyLimit = input.ReadInt64();
            break;
          }
          case 120: {
            TotalEnergyLimit = input.ReadInt64();
            break;
          }
          case 128: {
            TotalEnergyWeight = input.ReadInt64();
            break;
          }
          case 168: {
            StorageUsed = input.ReadInt64();
            break;
          }
          case 176: {
            StorageLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginatedMessage : pb::IMessage<PaginatedMessage> {
    private static readonly pb::MessageParser<PaginatedMessage> _parser = new pb::MessageParser<PaginatedMessage>(() => new PaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage(PaginatedMessage other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage Clone() {
      return new PaginatedMessage(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferMessage : pb::IMessage<EasyTransferMessage> {
    private static readonly pb::MessageParser<EasyTransferMessage> _parser = new pb::MessageParser<EasyTransferMessage>(() => new EasyTransferMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage(EasyTransferMessage other) : this() {
      passPhrase_ = other.passPhrase_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage Clone() {
      return new EasyTransferMessage(this);
    }

    /// <summary>Field number for the "passPhrase" field.</summary>
    public const int PassPhraseFieldNumber = 1;
    private pb::ByteString passPhrase_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PassPhrase {
      get { return passPhrase_; }
      set {
        passPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassPhrase != other.PassPhrase) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassPhrase.Length != 0) hash ^= PassPhrase.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassPhrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferMessage other) {
      if (other == null) {
        return;
      }
      if (other.PassPhrase.Length != 0) {
        PassPhrase = other.PassPhrase;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PassPhrase = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferAssetMessage : pb::IMessage<EasyTransferAssetMessage> {
    private static readonly pb::MessageParser<EasyTransferAssetMessage> _parser = new pb::MessageParser<EasyTransferAssetMessage>(() => new EasyTransferAssetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferAssetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage(EasyTransferAssetMessage other) : this() {
      passPhrase_ = other.passPhrase_;
      toAddress_ = other.toAddress_;
      assetId_ = other.assetId_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage Clone() {
      return new EasyTransferAssetMessage(this);
    }

    /// <summary>Field number for the "passPhrase" field.</summary>
    public const int PassPhraseFieldNumber = 1;
    private pb::ByteString passPhrase_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PassPhrase {
      get { return passPhrase_; }
      set {
        passPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 3;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferAssetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferAssetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassPhrase != other.PassPhrase) return false;
      if (ToAddress != other.ToAddress) return false;
      if (AssetId != other.AssetId) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassPhrase.Length != 0) hash ^= PassPhrase.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassPhrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (AssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferAssetMessage other) {
      if (other == null) {
        return;
      }
      if (other.PassPhrase.Length != 0) {
        PassPhrase = other.PassPhrase;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PassPhrase = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 26: {
            AssetId = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferByPrivateMessage : pb::IMessage<EasyTransferByPrivateMessage> {
    private static readonly pb::MessageParser<EasyTransferByPrivateMessage> _parser = new pb::MessageParser<EasyTransferByPrivateMessage>(() => new EasyTransferByPrivateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferByPrivateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage(EasyTransferByPrivateMessage other) : this() {
      privateKey_ = other.privateKey_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage Clone() {
      return new EasyTransferByPrivateMessage(this);
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferByPrivateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferByPrivateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferByPrivateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferAssetByPrivateMessage : pb::IMessage<EasyTransferAssetByPrivateMessage> {
    private static readonly pb::MessageParser<EasyTransferAssetByPrivateMessage> _parser = new pb::MessageParser<EasyTransferAssetByPrivateMessage>(() => new EasyTransferAssetByPrivateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferAssetByPrivateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage(EasyTransferAssetByPrivateMessage other) : this() {
      privateKey_ = other.privateKey_;
      toAddress_ = other.toAddress_;
      assetId_ = other.assetId_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage Clone() {
      return new EasyTransferAssetByPrivateMessage(this);
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 3;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferAssetByPrivateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferAssetByPrivateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (ToAddress != other.ToAddress) return false;
      if (AssetId != other.AssetId) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (AssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferAssetByPrivateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 26: {
            AssetId = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferResponse : pb::IMessage<EasyTransferResponse> {
    private static readonly pb::MessageParser<EasyTransferResponse> _parser = new pb::MessageParser<EasyTransferResponse>(() => new EasyTransferResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse(EasyTransferResponse other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      txid_ = other.txid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse Clone() {
      return new EasyTransferResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 3;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (Txid != other.Txid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Txid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Protocol.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Protocol.Return();
            }
            input.ReadMessage(Result);
            break;
          }
          case 26: {
            Txid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressPrKeyPairMessage : pb::IMessage<AddressPrKeyPairMessage> {
    private static readonly pb::MessageParser<AddressPrKeyPairMessage> _parser = new pb::MessageParser<AddressPrKeyPairMessage>(() => new AddressPrKeyPairMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressPrKeyPairMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage(AddressPrKeyPairMessage other) : this() {
      address_ = other.address_;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage Clone() {
      return new AddressPrKeyPairMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private string privateKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressPrKeyPairMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressPrKeyPairMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressPrKeyPairMessage other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionExtention : pb::IMessage<TransactionExtention> {
    private static readonly pb::MessageParser<TransactionExtention> _parser = new pb::MessageParser<TransactionExtention>(() => new TransactionExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention(TransactionExtention other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      txid_ = other.txid_;
      constantResult_ = other.constantResult_.Clone();
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention Clone() {
      return new TransactionExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 2;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constant_result" field.</summary>
    public const int ConstantResultFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_constantResult_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> constantResult_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ConstantResult {
      get { return constantResult_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Txid != other.Txid) return false;
      if(!constantResult_.Equals(other.constantResult_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      hash ^= constantResult_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Txid);
      }
      constantResult_.WriteTo(output, _repeated_constantResult_codec);
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      size += constantResult_.CalculateSize(_repeated_constantResult_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionExtention other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      constantResult_.Add(other.constantResult_);
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Protocol.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 18: {
            Txid = input.ReadBytes();
            break;
          }
          case 26: {
            constantResult_.AddEntriesFrom(input, _repeated_constantResult_codec);
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Protocol.Return();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockExtention : pb::IMessage<BlockExtention> {
    private static readonly pb::MessageParser<BlockExtention> _parser = new pb::MessageParser<BlockExtention>(() => new BlockExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention(BlockExtention other) : this() {
      transactions_ = other.transactions_.Clone();
      blockHeader_ = other.blockHeader_ != null ? other.blockHeader_.Clone() : null;
      blockid_ = other.blockid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention Clone() {
      return new BlockExtention(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.TransactionExtention> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.TransactionExtention> transactions_ = new pbc::RepeatedField<global::Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.TransactionExtention> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "block_header" field.</summary>
    public const int BlockHeaderFieldNumber = 2;
    private global::Protocol.BlockHeader blockHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.BlockHeader BlockHeader {
      get { return blockHeader_; }
      set {
        blockHeader_ = value;
      }
    }

    /// <summary>Field number for the "blockid" field.</summary>
    public const int BlockidFieldNumber = 3;
    private pb::ByteString blockid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Blockid {
      get { return blockid_; }
      set {
        blockid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      if (!object.Equals(BlockHeader, other.BlockHeader)) return false;
      if (Blockid != other.Blockid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (blockHeader_ != null) hash ^= BlockHeader.GetHashCode();
      if (Blockid.Length != 0) hash ^= Blockid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (blockHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockHeader);
      }
      if (Blockid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Blockid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (blockHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeader);
      }
      if (Blockid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Blockid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockExtention other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      if (other.blockHeader_ != null) {
        if (blockHeader_ == null) {
          BlockHeader = new global::Protocol.BlockHeader();
        }
        BlockHeader.MergeFrom(other.BlockHeader);
      }
      if (other.Blockid.Length != 0) {
        Blockid = other.Blockid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 18: {
            if (blockHeader_ == null) {
              BlockHeader = new global::Protocol.BlockHeader();
            }
            input.ReadMessage(BlockHeader);
            break;
          }
          case 26: {
            Blockid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockListExtention : pb::IMessage<BlockListExtention> {
    private static readonly pb::MessageParser<BlockListExtention> _parser = new pb::MessageParser<BlockListExtention>(() => new BlockListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention(BlockListExtention other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention Clone() {
      return new BlockListExtention(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.BlockExtention> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.BlockExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.BlockExtention> block_ = new pbc::RepeatedField<global::Protocol.BlockExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.BlockExtention> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockListExtention other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionListExtention : pb::IMessage<TransactionListExtention> {
    private static readonly pb::MessageParser<TransactionListExtention> _parser = new pb::MessageParser<TransactionListExtention>(() => new TransactionListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention(TransactionListExtention other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention Clone() {
      return new TransactionListExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.TransactionExtention> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.TransactionExtention> transaction_ = new pbc::RepeatedField<global::Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.TransactionExtention> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionListExtention other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionSignWeight : pb::IMessage<TransactionSignWeight> {
    private static readonly pb::MessageParser<TransactionSignWeight> _parser = new pb::MessageParser<TransactionSignWeight>(() => new TransactionSignWeight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionSignWeight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight(TransactionSignWeight other) : this() {
      permission_ = other.permission_ != null ? other.permission_.Clone() : null;
      approvedList_ = other.approvedList_.Clone();
      currentWeight_ = other.currentWeight_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight Clone() {
      return new TransactionSignWeight(this);
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 1;
    private global::Protocol.Permission permission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Permission Permission {
      get { return permission_; }
      set {
        permission_ = value;
      }
    }

    /// <summary>Field number for the "approved_list" field.</summary>
    public const int ApprovedListFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_approvedList_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> approvedList_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ApprovedList {
      get { return approvedList_; }
    }

    /// <summary>Field number for the "current_weight" field.</summary>
    public const int CurrentWeightFieldNumber = 3;
    private long currentWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentWeight {
      get { return currentWeight_; }
      set {
        currentWeight_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Protocol.TransactionSignWeight.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TransactionSignWeight.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 5;
    private global::Protocol.TransactionExtention transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TransactionExtention Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionSignWeight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionSignWeight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Permission, other.Permission)) return false;
      if(!approvedList_.Equals(other.approvedList_)) return false;
      if (CurrentWeight != other.CurrentWeight) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (permission_ != null) hash ^= Permission.GetHashCode();
      hash ^= approvedList_.GetHashCode();
      if (CurrentWeight != 0L) hash ^= CurrentWeight.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (permission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Permission);
      }
      approvedList_.WriteTo(output, _repeated_approvedList_codec);
      if (CurrentWeight != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrentWeight);
      }
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (transaction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (permission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Permission);
      }
      size += approvedList_.CalculateSize(_repeated_approvedList_codec);
      if (CurrentWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentWeight);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionSignWeight other) {
      if (other == null) {
        return;
      }
      if (other.permission_ != null) {
        if (permission_ == null) {
          Permission = new global::Protocol.Permission();
        }
        Permission.MergeFrom(other.Permission);
      }
      approvedList_.Add(other.approvedList_);
      if (other.CurrentWeight != 0L) {
        CurrentWeight = other.CurrentWeight;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Protocol.TransactionSignWeight.Types.Result();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Protocol.TransactionExtention();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (permission_ == null) {
              Permission = new global::Protocol.Permission();
            }
            input.ReadMessage(Permission);
            break;
          }
          case 18: {
            approvedList_.AddEntriesFrom(input, _repeated_approvedList_codec);
            break;
          }
          case 24: {
            CurrentWeight = input.ReadInt64();
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Protocol.TransactionSignWeight.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 42: {
            if (transaction_ == null) {
              Transaction = new global::Protocol.TransactionExtention();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionSignWeight message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Result : pb::IMessage<Result> {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protocol.TransactionSignWeight.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          code_ = other.code_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Protocol.TransactionSignWeight.Types.Result.Types.response_code code_ = global::Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.TransactionSignWeight.Types.Result.Types.response_code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Code != global::Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Protocol.TransactionSignWeight.Types.Result.Types.response_code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Result message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum response_code {
            [pbr::OriginalName("ENOUGH_PERMISSION")] EnoughPermission = 0,
            /// <summary>
            /// error in
            /// </summary>
            [pbr::OriginalName("NOT_ENOUGH_PERMISSION")] NotEnoughPermission = 1,
            [pbr::OriginalName("SIGNATURE_FORMAT_ERROR")] SignatureFormatError = 2,
            [pbr::OriginalName("COMPUTE_ADDRESS_ERROR")] ComputeAddressError = 3,
            /// <summary>
            ///The key is not in permission
            /// </summary>
            [pbr::OriginalName("PERMISSION_ERROR")] PermissionError = 4,
            [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class TransactionApprovedList : pb::IMessage<TransactionApprovedList> {
    private static readonly pb::MessageParser<TransactionApprovedList> _parser = new pb::MessageParser<TransactionApprovedList>(() => new TransactionApprovedList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionApprovedList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList(TransactionApprovedList other) : this() {
      approvedList_ = other.approvedList_.Clone();
      result_ = other.result_ != null ? other.result_.Clone() : null;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList Clone() {
      return new TransactionApprovedList(this);
    }

    /// <summary>Field number for the "approved_list" field.</summary>
    public const int ApprovedListFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_approvedList_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> approvedList_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ApprovedList {
      get { return approvedList_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Protocol.TransactionApprovedList.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TransactionApprovedList.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 5;
    private global::Protocol.TransactionExtention transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TransactionExtention Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionApprovedList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionApprovedList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!approvedList_.Equals(other.approvedList_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= approvedList_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      approvedList_.WriteTo(output, _repeated_approvedList_codec);
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (transaction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += approvedList_.CalculateSize(_repeated_approvedList_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionApprovedList other) {
      if (other == null) {
        return;
      }
      approvedList_.Add(other.approvedList_);
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Protocol.TransactionApprovedList.Types.Result();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Protocol.TransactionExtention();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            approvedList_.AddEntriesFrom(input, _repeated_approvedList_codec);
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Protocol.TransactionApprovedList.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 42: {
            if (transaction_ == null) {
              Transaction = new global::Protocol.TransactionExtention();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionApprovedList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Result : pb::IMessage<Result> {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protocol.TransactionApprovedList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          code_ = other.code_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Protocol.TransactionApprovedList.Types.Result.Types.response_code code_ = global::Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.TransactionApprovedList.Types.Result.Types.response_code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Code != global::Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Protocol.TransactionApprovedList.Types.Result.Types.response_code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Result message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum response_code {
            [pbr::OriginalName("SUCCESS")] Success = 0,
            [pbr::OriginalName("SIGNATURE_FORMAT_ERROR")] SignatureFormatError = 1,
            [pbr::OriginalName("COMPUTE_ADDRESS_ERROR")] ComputeAddressError = 2,
            [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
